require(rjson)
require(plyr)
file <- "paper/data/sample.xml"
graph<-xmlRoot(xmlTreeParse(file))[["graph"]]
nodes<-xmlElementsByTagName(graph, "node")
edges<-xmlElementsByTagName(graph, "edge")
node_list<-list()
for(i in 1:length(nodes)){
id<-xmlGetAttr(nodes[[i]], "id")
data<-xmlElementsByTagName(nodes[[i]], "data")
data_list<-list()
for(j in 1:length(data)) {
data_list[[xmlGetAttr(data[[j]],"key")]]<-xmlValue(data[[j]])
}
node_list[[i]]<-cbind(id, data.frame(data_list))
}
edge_list <- lapply(1:length(edges),function(i) c(source=xmlGetAttr(edges[[i]],"source"), target=xmlGetAttr(edges[[i]],"target")))
temp.n<-ldply(node_list)
temp.e<-ldply(edge_list)
e.2<-data.frame(source=apply(temp.e, 1, function(x) which(temp.n$id == x["source"])-1),
target=apply(temp.e, 1, function(x) which(temp.n$id == x["target"])-1))
edge_list.2<-split(e.2, 1:nrow(e.2))
names(edge_list.2)<-NULL
merge_lists<-list()
merge_lists$nodes<-node_list
merge_lists$edges<-edge_list.2
toJSON(merge_lists)
?toJSON
packages<-c("knitr", "plyr", "ggplot2", "reshape2", "shiny", "rodbc")
install.packages(packages)
install.packages("dev_tools")
install.packages("RODBC")
install.packages("rjson")
install.packages("igraph")
install.packages(c("lubridate", "scales"))
library(igram)
library(igraph)
setwd("~/GitHub/CreativeComponent/paper")
read.graph("data/football_network.gml", format="gml")
football.g<-read.graph("data/football_network.gml", format="gml")
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="both")
head(football.df$vertices)
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
head(football.df)
subset(football.df, value==0)
?equal
@
all.equal(subset(football.df, value == 0)$Group)
?all.equal
unique(subset(football.df, value == 0)$Group)
length(unique(subset(football.df, value == 0)$Group))
unique(football.df$value)
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
df
football.df
df
substring(football.df$Group,1)
?substring
substring(football.df$Group,1,1)
substring(football.df$Group,1,1) == "n"
football.df$Group[substring(football.df$Group,1,1) == "n"]
as.numeric(football.df$Group)
max(as.numeric(football.df$Group), na.rm=TRUE)
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
df
df$orig.grp[df$grav.grp]
df$orig.grp[!df$grav.grp]
football.df[football.df$value %in% df$orig.grp[!df$grav.grp]]
football.df[football.df$value %in% df$orig.grp[!df$grav.grp],]
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp],])
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp],])/nrow(football.df)
sum(df$grav.grp)
nrow(df) - sum(df$grav.grp)
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
sum(df$grav.grp)
nrow(df) - sum(df$grav.grp)
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp],])/nrow(football.df)
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
sum(df$grav.grp)
nrow(df) - sum(df$grav.grp)
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp],])/nrow(football.df)
football.df <- get.data.frame(read.graph("data/network.gml", format="gml"), what="vertices")
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
sum(df$grav.grp)
nrow(df) - sum(df$grav.grp)
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp],])/nrow(football.df)
football.df <- get.data.frame(read.graph("data/network.gml", format="gml"), what="vertices")
football.df
football.df$Group[substring(football.df$Group,1,1) == "n"]
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
df
football.df[football.df$value %in% df$orig.grp[!df$grav.grp],]
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp] & football.df$value <> 10,])/nrow(football.df)
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp] & football.df$value != 10,])/nrow(football.df)
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp] && football.df$value != 10,])/nrow(football.df)
football.df[football.df$value %in% df$orig.grp[!df$grav.grp] & football.df$value != 10,]
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = unique(football.df$value))
df$grav.grp <- apply(df, 1, function(x) {length(unique(subset(football.df, value == x["orig.grp"])$Group)) == 1})
sum(df$grav.grp)
#num groups with at least one wrong
nrow(df) - sum(df$grav.grp)
#percent schools misspecified
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp],])/nrow(football.df)
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp] & football.df$value != 10,])/nrow(football.df)
football.df[football.df$value %in% df$orig.grp[!df$grav.grp] & football.df$value != 10,]
nrow(football.df[football.df$value %in% df$orig.grp[!df$grav.grp] & football.df$value != 10,])
25/115
1/2
x<-1
y<-2
x/y
class(x)
?integer
interger(1)/integer(2)
integer(1)/integer(2)
as.integer(1)/as.integer(2)
class(nrow(df))
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
df <- data.frame(orig.grp = unique(football.df$value))
df
df <- data.frame(orig.grp = sort(unique(football.df$value)))
df
?mode
(football.df[football.df$value == df$orig.grp[1],"Group"]
table(football.df[football.df$value == df$orig.grp[1],"Group"])
sort(-table(football.df[football.df$value == df$orig.grp[1],"Group"]))
names(sort(-table(football.df[football.df$value == df$orig.grp[1],"Group"])))
names(sort(-table(football.df[football.df$value == df$orig.grp[1],"Group"])))[1]
library(plyr)
ddply(football.df, .(value), summarise, grav.grp <- names(sort(-table(football.df[football.df$value == df$orig.grp[1],"Group"])))[1]
?ddply
ddply(football.df, .(value), summarise, grav.grp <- names(sort(-table(Group)))[1])
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
football.df$Group[substring(football.df$Group,1,1) == "n"] <- max(as.numeric(football.df$Group), na.rm=TRUE) + 1
df <- data.frame(orig.grp = sort(unique(football.df$value)))
ddply(football.df, .(value), summarise, grav.grp <- names(sort(-table(Group)))[1])
football.df[football.df$value == 10,]
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
football.df[football.df$value == 10,]
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
football.df <- get.data.frame(read.graph("data/network.gml", format="gml"), what="vertices")
football.df[football.df$value == 10,]
football.df[football.df$value == 11,]
football.df[football.df$value == 9,]
football.df[football.df$value == 8,]
football.df[football.df$value == 7,]
football.df[football.df$value == 6,]
football.df[football.df$label == "NotreDame",]
football.df[football.df$value == 5,]
nrow(football.df[football.df$value == 5,])
football.df$Group[substring(football.df$Group,1,1) == "n"]
football.df[substring(football.df$Group,1,1) == "n"]
football.df[substring(football.df$Group,1,1) == "n",]
ddply(football.df, .(value), summarise, grav.grp <- names(sort(-table(Group)))[1])
/ldply
?ldply
dlply(football.df, .(value), summarise, grav.grp <- table(Group))
groups <- dlply(football.df, .(value), summarise, grav.grp <- table(Group))
groups$1
groups[[1]]
groups[[2]]
groups[[3]]
groups[[4]]
groups[[5]]
groups[[6]]
table(football.df$Group[football.df$value == 5])
table(football.df$Group[football.df$value == 6])
class(table(football.df$Group[football.df$value == 6]))
data.frame(table(football.df$Group[football.df$value == 6]))
groups <- dlply(football.df, .(value), summarise, data.frame(table(Group)))
groups[[1]]
groups[[2]]
groups[[3]]
groups[[4]]
groups[[5]]
groups[[6]]
groups[[7]]
groups[[8]]
groups[[9]]
groups[[10]]
groups[[11]]
groups[[12]]
length(groups)
sort(unique(football.df$value))
length(unique(football.df$value))
length(unique(football.df$Group))
head(football.df)
football.df[with(football.df, order("value")),]
football.df[with(football.df, order(value)),]
football.df[with(football.df, order(value)),][football.df$value == 6,]
subset(football.df[with(football.df, order(value)),], value == 6)
length(subset(football.df[with(football.df, order(value)),], value == 6))
nrow(subset(football.df[with(football.df, order(value)),], value == 6))
football.df <- get.data.frame(read.graph("data/network (1).gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]
groups <- dlply(football.df, .(value), summarise, data.frame(table(Group)))
groups
ddply(football.df, .(value), summarise, grav.grp <- names(sort(-table(Group)))[1])
ddply(football.df, .(value), summarise, grav.grp = names(sort(-table(Group)))[1])
groups <- dlply(football.df, .(value), summarise, grav.grp = data.frame(table(Group)))
groups
ddply(football.df, .(value), summarise, grav.grp = names(sort(-table(Group)))[1])
ddply(football.df, .(Group), summarise, orig.grp <- names(sort(-table(value)))[1])
football.df[substring(football.df$Group,1,1) == "n",]<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp <- names(sort(-table(value)))[1])
map
football.df <- get.data.frame(read.graph("data/network (1).gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp <- names(sort(-table(value)))[1])
map
names(map)
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
names(map)
football.df$gravicom.map <- map[map$Group == football.df$Group, "orig.grp"]
football.df$Group
map$Group == football.df$Group
map
merge(football.df, map, by = "Group", all.x=TRUE)
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
sum(football.df.m$value != football.df.m$orig.grp)
sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
percent_correct
subset(football.df, value == 5)
nrow(subset(football.df, value == 5))
?scales
library(scales)
detach("package:igraph", unload=TRUE)
library(igraph)
percent_format(percent_correct)
percent(percent_correct)
football.df <- get.data.frame(read.graph("data/football_network.gml", format="gml"), what="vertices")
percent_correct
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
#create map from gravicom to original by most mapped
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
#percent school misspecified
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
library(igraph)
library(plyr)
library(scales)
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
football.df
football.df[substring(football.df$Group,1,1) == "n",]$Group
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
setwd("~/GitHub/CreativeComponent/paper/parts")
library(igraph)
library(plyr)
library(scales)
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df
sessionInfo()
install.packages(c("caTools", "Deducer", "formatR", "highr", "igraph", "lme4", "lubridate", "multcomp", "RcppEigen", "shiny"))
library(igraph)
library(plyr)
library(scales)
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
football.df
names(football.df)
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
percent_correct
percent_correct*100
round(percent_correct*100,2)
round(percent_correct*100,3)
football.df <- get.data.frame(read.graph("../data/polbooks_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
percent_correct
polbooks.df <- get.data.frame(read.graph("../data/polbooks_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"ungrouped"
polbooks.df[substring(polbooks.df$Group,1,1) == "n",]$Group<-"ungrouped"
map <- ddply(polbooks.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
polbooks.df.m <- merge(polbooks.df, map, by = "Group", all.x=TRUE)
percent_correct <- 1 - sum(polbooks.df.m$value != polbooks.df.m$orig.grp)/nrow(polbooks.df)
percent_correct
polbooks.df
polbooks.df[with(polbooks.df, order(Group)),]
map <- ddply(polbooks.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
polbooks.df.m <- merge(polbooks.df, map, by = "Group", all.x=TRUE)
pollbooks.df.m
polbooks.df.m
polbooks.df <- get.data.frame(read.graph("../data/polbooks_network.gml", format="gml"), what="vertices")
polbooks.df[substring(polbooks.df$Group,1,1) == "n",]$Group<-"ungrouped"
polbooks.df <- get.data.frame(read.graph("../data/polbooks_network.gml", format="gml"), what="vertices")
if(length(polbooks.df[substring(polbooks.df$Group,1,1) == "n",]$Group) > 0) {polbooks.df[substring(polbooks.df$Group,1,1) == "n",]$Group<-"ungrouped"}
map <- ddply(polbooks.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
polbooks.df.m <- merge(polbooks.df, map, by = "Group", all.x=TRUE)
percent_correct <- 1 - sum(polbooks.df.m$value != polbooks.df.m$orig.grp)/nrow(polbooks.df)
percent_correct
polbooks.df.m
subset(polbooks.df.m, orig.grp == "l")
nrow(subset(polbooks.df.m, orig.grp == "l"))
nrow(subset(polbooks.df.m, orig.grp == "c"))
nrow(subset(polbooks.df.m, orig.grp == "n"))
subset(polbooks.df.m, orig.grp == "l")[,"label", 'value', 'orig.grp']
subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value', 'orig.grp')]
subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')]
subset(polbooks.df.m, orig.grp == "c")[,c("label", 'value')]
subset(polbooks.df.m, orig.grp == "n")[,c("label", 'value')]
library(xtable)
xtable(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')])
print(xtable(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')]), include.rownames=FALSE)
libe <- subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')])
cons <- subset(polbooks.df.m, orig.grp == "c")[,c("label", 'value')])
neut <- subset(polbooks.df.m, orig.grp == "n")[,c("label", 'value')])
libe <- subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')]
cons <- subset(polbooks.df.m, orig.grp == "c")[,c("label", 'value')]
neut <- subset(polbooks.df.m, orig.grp == "n")[,c("label", 'value')]
n <- max(nrow(libe), nrow(cons), nrow(neut))
nrow(libe) <- n
rbind(libe, rep(C("",""), nrow(libe) - n))
rbind(libe, rep(C(" "," "), nrow(libe) - n))
rbind(libe, rep(c(" "," "), nrow(libe) - n))
nrow(libe) - n
rbind(libe, rep(c(" "," "), n - nrow(libe)))
nrow(rbind(libe, rep(c(" "," "), n - nrow(libe))))
n
n - rnow(libe)
n - nrow(libe)
nrow(libe)
rep(c(" "," "), n - nrow(libe))
?matrix
nrow(rbind(libe, matrix(rep(c(" "," "), n - nrow(libe)), ncol=2)))
matrix(rep(c(" "," "), n - nrow(libe)), ncol=2)
nrow(rbind(libe, data.frame(rep(c(" "," "), n - nrow(libe)), ncol=2)))
data.frame(rep(c(" "," "), n - nrow(libe)), ncol=2)
names(libr)
names(libe)
nrow(rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))))
cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), value=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), value=rep(" ", n - nrow(neut)))))
res <- cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), value=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), value=rep(" ", n - nrow(neut)))))
str(res)
names(res)
merge(res, labels.map, by.x="value", by.y="abbr")
labels.map <- data.frame(name=c("Conservative", "Liberal", "Neutral"), abbr=c("c","l","n"))
merge(res, labels.map, by.x="value", by.y="abbr")
libe <- merge(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')], by.x="value", by.y="abbr")
libe <- merge(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")
libe
libe <- merge(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")[,-1]
libe
cons <- merge(subset(polbooks.df.m, orig.grp == "c")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")[,-1]
neut <- merge(subset(polbooks.df.m, orig.grp == "n")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")[,-1]
n <- max(nrow(libe), nrow(cons), nrow(neut))
res <- cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), value=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), value=rep(" ", n - nrow(neut)))))
res <- cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), name=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), name=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), name=rep(" ", n - nrow(neut)))))
res
print(xtable(res, include.rownames=FALSE)
)
print(xtable(res), include.rownames=FALSE)
res
library(igraph)
library(plyr)
library(scales)
setwd("~/GitHub/CreativeComponent/paper/parts")
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
football.df.m
football.df
ddply(football.df, .(Group), summarise, teams=paste(label, sep=", "))
?ddply
ddply(football.df, .(Group), paste(label, sep=", "))
ddply(football.df, .(Group), paste, label, sep=", ")
?paste
paste(football.df$Group)
paste(football.df$Group, sep="")
ddply(football.df, .(Group), teams=paste(label, collapse=", "))
ddply(football.df, .(Group), summarise, teams=paste(label, collapse=", "))
head(football.df.m)
ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "))
ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc_right=1 - sum(value != orig.grp)/nrow(orig.grp))
ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc_right=1 - sum(value != orig.grp)/length(orig.grp))
library(scales)
results <- ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc_right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results
results$teams[1]
results$teams[2]
results$teams[3]
results$teams[4]
head(football.df.m)
results <- ddply(football.df.m, .(value), summarise, teams=paste(label, collapse=", "), perc_right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results
/xtable
?xtable
library(xtable)
?xtable
?print.xtable
?gsub
xtable(results, align=c("c", "c", "p\{3cm\}", "c"))
xtable(results, align=c("c", "c", "p{3cm}", "c"))
print(xtable(results, align=c("c", "c", "p{3cm}", "c")),sanitize.text.function = function(x){gsub('%', '\\\\%', x); gsub('&', '\\\\&', x)}, include.rownames=FALSE, table.placement='H', )
results <- ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc.right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
names(results)
results <- results[with(results, order(orig.grp)),]
results$orig.grp
results <- results[with(results, order(as.numeric(orig.grp))),]
results$orig.grp
results$Conference <- c("ACC", "Big East", "Big 10", "Big 12", "C-USA", "Independent", "MAC", "Mountain West", "Pac-10", "SEC", "Big West", "WAC" )
colnames(results) <- c("Conference", "Teams Identified", "Percent Correct")
results <- results[,c(4,2,3)]
colnames(results) <- c("Conference", "Teams Identified", "Percent Correct")
head(results)
library(xtable)
?xtable
?sprintf
library(igraph)
library(plyr)
library(scales)
library(xtable)
setwd("~/GitHub/CreativeComponent/paper")
polbooks.df <- get.data.frame(read.graph("../data/polbooks_network.gml", format="gml"), what="vertices")
setwd("~/GitHub/CreativeComponent/paper/parts")
polbooks.df <- get.data.frame(read.graph("../data/polbooks_network.gml", format="gml"), what="vertices")
football.df[substring(polbooks.df$Group,1,1) == "n",]$Group
polbooks.df[substring(polbooks.df$Group,1,1) == "n",]$Group
polbooks.df[substring(polbooks.df$Group,1,1) == "n",]
map <- ddply(polbooks.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
map
polbooks.df.m <- merge(polbooks.df, map, by = "Group", all.x=TRUE)
idx <- with(polbooks.df.m, which(value != orig.grp))
idx
polbooks.df.m$label[idx]
polbooks.df.m$label[idx] <- sprintf("{\\it %s}",polbooks.df.m$label[idx])
results <- ddply(polbooks.df.m, .(orig.grp), summarise,
books=paste(label, collapse=", "),
perc.right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results <- results[with(results, order(as.numeric(orig.grp))),]
results <- ddply(polbooks.df.m, .(orig.grp), summarise,
books=paste(label, collapse=", "),
perc.right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results
str(results)
results$designation <- c("Conservative", "Liberal", "Neutral")
results <- results[,c(4,2,3)]
head(results)
1 - sum(polbooks.df.m$value != polbooks.df.m$orig.grp)/nrow(polbooks.df)
print(xtable(results, align=c("c", "c","p{10cm}","c"), label='tab:football_final'),sanitize.text.function = function(x)gsub('%', '\\\\%', gsub('&', '\\\\&', x)), include.rownames=FALSE, table.placement='H')
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
idx <- with(football.df.m, which(value != orig.grp))
football.df.m$label[idx] <- sprintf("{\\it %s}",football.df.m$label[idx])
results <- ddply(football.df.m, .(orig.grp), summarise,
teams=paste(label, collapse=", "),
perc.right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results <- results[with(results, order(as.numeric(orig.grp))),]
results$Conference <- c("ACC", "Big East", "Big 10", "Big 12", "C-USA", "Independent", "MAC", "Mountain West", "Pac-10", "SEC", "Big West", "WAC" )
results <- results[,c(4,2,3)]
colnames(results) <- c("Conference", "Teams Identified", "Accuracy")
results$`Teams Identified` <- gsub('(.)([A-Z])',"\\1 \\2", results$`Teams Identified`)
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
print(xtable(results, align=c("c", "c","p{10cm}","c"), label='tab:football_final'),sanitize.text.function = function(x)gsub('%', '\\\\%', gsub('&', '\\\\&', x)), include.rownames=FALSE, table.placement='H')
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
#put all ungrouped as own group -- corresponds to value 5
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
#create map from gravicom to original by most mapped
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
idx <- with(football.df.m, which(value != orig.grp))
football.df.m$label[idx] <- sprintf("{\\it %s}",football.df.m$label[idx])
results <- ddply(football.df.m, .(orig.grp), summarise,
teams=paste(label, collapse=", "),
perc.right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results <- results[with(results, order(as.numeric(orig.grp))),]
results$Conference <- c("ACC", "Big East", "Big 10", "Big 12", "C-USA", "Independent", "MAC", "Mountain West", "Pac-10", "SEC", "Big West", "WAC" )
results <- results[,c(4,2,3)]
colnames(results) <- c("Conference", "Teams Identified", "Accuracy")
results$`Teams Identified` <- gsub('(.)([A-Z])',"\\1 \\2", results$`Teams Identified`)
#percent school misspecified
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
print(xtable(results, align=c("c", "c","p{10cm}","c"), label='tab:football_final'),sanitize.text.function = function(x)gsub('%', '\\\\%', gsub('&', '\\\\&', x)), include.rownames=FALSE, table.placement='H')
