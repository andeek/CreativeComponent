rbind(libe, rep(c(" "," "), n - nrow(libe)))
nrow(rbind(libe, rep(c(" "," "), n - nrow(libe))))
n
n - rnow(libe)
n - nrow(libe)
nrow(libe)
rep(c(" "," "), n - nrow(libe))
?matrix
nrow(rbind(libe, matrix(rep(c(" "," "), n - nrow(libe)), ncol=2)))
matrix(rep(c(" "," "), n - nrow(libe)), ncol=2)
nrow(rbind(libe, data.frame(rep(c(" "," "), n - nrow(libe)), ncol=2)))
data.frame(rep(c(" "," "), n - nrow(libe)), ncol=2)
names(libr)
names(libe)
nrow(rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))))
cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), value=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), value=rep(" ", n - nrow(neut)))))
res <- cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), value=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), value=rep(" ", n - nrow(neut)))))
str(res)
names(res)
merge(res, labels.map, by.x="value", by.y="abbr")
labels.map <- data.frame(name=c("Conservative", "Liberal", "Neutral"), abbr=c("c","l","n"))
merge(res, labels.map, by.x="value", by.y="abbr")
libe <- merge(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')], by.x="value", by.y="abbr")
libe <- merge(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")
libe
libe <- merge(subset(polbooks.df.m, orig.grp == "l")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")[,-1]
libe
cons <- merge(subset(polbooks.df.m, orig.grp == "c")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")[,-1]
neut <- merge(subset(polbooks.df.m, orig.grp == "n")[,c("label", 'value')], labels.map, by.x="value", by.y="abbr")[,-1]
n <- max(nrow(libe), nrow(cons), nrow(neut))
res <- cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), value=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), value=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), value=rep(" ", n - nrow(neut)))))
res <- cbind(
rbind(libe, data.frame(label=rep(" ", n - nrow(libe)), name=rep(" ", n - nrow(libe)))),
rbind(cons, data.frame(label=rep(" ", n - nrow(cons)), name=rep(" ", n - nrow(cons)))),
rbind(neut, data.frame(label=rep(" ", n - nrow(neut)), name=rep(" ", n - nrow(neut)))))
res
print(xtable(res, include.rownames=FALSE)
)
print(xtable(res), include.rownames=FALSE)
res
library(igraph)
library(plyr)
library(scales)
setwd("~/GitHub/CreativeComponent/paper/parts")
football.df <- get.data.frame(read.graph("../data/football_network.gml", format="gml"), what="vertices")
football.df[substring(football.df$Group,1,1) == "n",]$Group<-"independent"
map <- ddply(football.df, .(Group), summarise, orig.grp = names(sort(-table(value)))[1])
football.df.m <- merge(football.df, map, by = "Group", all.x=TRUE)
percent_correct <- 1 - sum(football.df.m$value != football.df.m$orig.grp)/nrow(football.df)
football.df.m
football.df
ddply(football.df, .(Group), summarise, teams=paste(label, sep=", "))
?ddply
ddply(football.df, .(Group), paste(label, sep=", "))
ddply(football.df, .(Group), paste, label, sep=", ")
?paste
paste(football.df$Group)
paste(football.df$Group, sep="")
ddply(football.df, .(Group), teams=paste(label, collapse=", "))
ddply(football.df, .(Group), summarise, teams=paste(label, collapse=", "))
head(football.df.m)
ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "))
ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc_right=1 - sum(value != orig.grp)/nrow(orig.grp))
ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc_right=1 - sum(value != orig.grp)/length(orig.grp))
library(scales)
results <- ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc_right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results
results$teams[1]
results$teams[2]
results$teams[3]
results$teams[4]
head(football.df.m)
results <- ddply(football.df.m, .(value), summarise, teams=paste(label, collapse=", "), perc_right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
results
/xtable
?xtable
library(xtable)
?xtable
?print.xtable
?gsub
xtable(results, align=c("c", "c", "p\{3cm\}", "c"))
xtable(results, align=c("c", "c", "p{3cm}", "c"))
print(xtable(results, align=c("c", "c", "p{3cm}", "c")),sanitize.text.function = function(x){gsub('%', '\\\\%', x); gsub('&', '\\\\&', x)}, include.rownames=FALSE, table.placement='H', )
results <- ddply(football.df.m, .(orig.grp), summarise, teams=paste(label, collapse=", "), perc.right=percent(1 - sum(value != orig.grp)/length(orig.grp)))
names(results)
results <- results[with(results, order(orig.grp)),]
results$orig.grp
results <- results[with(results, order(as.numeric(orig.grp))),]
results$orig.grp
results$Conference <- c("ACC", "Big East", "Big 10", "Big 12", "C-USA", "Independent", "MAC", "Mountain West", "Pac-10", "SEC", "Big West", "WAC" )
colnames(results) <- c("Conference", "Teams Identified", "Percent Correct")
results <- results[,c(4,2,3)]
colnames(results) <- c("Conference", "Teams Identified", "Percent Correct")
head(results)
library(xtable)
?xtable
library(reshape2)
library(plyr)
chapters <- read.csv("paper/data/got/chapters.csv")
characters <- read.csv("paper/data/got/characters.csv")
events <- read.csv("paper/data/got/events.csv")
teams <- read.csv("paper/data/got/teams.csv")
chaps <- ddply(events, .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
w <- dcast(subset(chaps, bookID == 0)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
graph_0<-graph.data.frame(coocc[,-1], directed=FALSE)
library(igraph)
graph_0<-graph.data.frame(coocc[,-1], directed=FALSE)
has.multiple(graph_0)
count.multiple(graph_0)
graph_0 <- simplify(graph_0, remove.loops=FALSE)
has.multiple(graph_0)
plot(graph_0)
write.graph(graph_0, "paper/data/got/book_0.gml", format="gml")
V(graph_0)
length(V(graph_0))
length(E(graph_0))
head(events)
chaps <- ddply(subset(events, event=="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
w <- dcast(subset(chaps, bookID == 0)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
graph_0 <- graph.data.frame(coocc[,-1], directed=FALSE)
graph_0 <- simplify(graph_0, remove.loops=FALSE)
plot(graph_0)
length(E(graph_0))
write.graph(graph_0, "paper/data/got/book_0.gml", format="gml")
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
w <- dcast(subset(chaps, bookID == 0)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
graph_0 <- graph.data.frame(coocc[,-1], directed=FALSE)
graph_0 <- simplify(graph_0, remove.loops=FALSE)
length(E(graph_0))
length(V(graph_0))
plot(graph_0)
write.graph(graph_0, "paper/data/got/book_0.gml", format="gml")
w_2 <- dcast(subset(chaps, bookID == 2)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_2 <- ldply(apply(w_2[,-1], 2, function(col) expand.grid(w_2[!is.na(col),]$characterID, w_2[!is.na(col),]$characterID)), function(x) x)
coocc_2 <- subset(coocc_2, Var1 != Var2)
names(coocc_2) <- c("chapterID", "charID_1", "charID_2")
graph_2 <- graph.data.frame(coocc_2[,-1], directed=FALSE)
graph_2 <- simplify(graph_2, remove.loops=FALSE)
w_4 <- dcast(subset(chaps, bookID == 4)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_4 <- ldply(apply(w_2[,-1], 2, function(col) expand.grid(w_4[!is.na(col),]$characterID, w_4[!is.na(col),]$characterID)), function(x) x)
coocc_4 <- subset(coocc_4, Var1 != Var2)
names(coocc_4) <- c("chapterID", "charID_1", "charID_2")
graph_4 <- graph.data.frame(coocc_4[,-1], directed=FALSE)
graph_4 <- simplify(graph_4, remove.loops=FALSE)
plot(graph_2)
plot(graph_4)
merge(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)
w_0 <- dcast(subset(chaps, bookID == 0)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_0 <- ldply(apply(w_0[,-1], 2, function(col) expand.grid(w_0[!is.na(col),]$characterID, w_0[!is.na(col),]$characterID)), function(x) x)
coocc_0 <- subset(coocc_0, Var1 != Var2)
names(coocc_0) <- c("chapterID", "charID_1", "charID_2")
merge(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)
merge(merge[(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:4], by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
merge(merge(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:4], by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
merge(merge(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
merge(merge(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:5]
head(merge(merge(coocc_0, characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:5])
head(merge(merge(coocc_0, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5])
coocc_0 <- merge(merge(coocc_0, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
head(coocc_0)
names(coocc_0) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
#Book 1
w_0 <- dcast(subset(chaps, bookID == 0)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_0 <- ldply(apply(w_0[,-1], 2, function(col) expand.grid(w_0[!is.na(col),]$characterID, w_0[!is.na(col),]$characterID)), function(x) x)
coocc_0 <- subset(coocc_0, Var1 != Var2)
names(coocc_0) <- c("chapterID", "charID_1", "charID_2")
coocc_0 <- merge(merge(coocc_0, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc_0) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph_0 <- graph.data.frame(coocc_0[,c("charName_1", "charName_2")], directed=FALSE)
graph_0 <- simplify(graph_0, remove.loops=FALSE)
V(graph_0)$label <- V(graph_0)$name
#Book 3
w_2 <- dcast(subset(chaps, bookID == 2)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_2 <- ldply(apply(w_2[,-1], 2, function(col) expand.grid(w_2[!is.na(col),]$characterID, w_2[!is.na(col),]$characterID)), function(x) x)
coocc_2 <- subset(coocc_2, Var1 != Var2)
names(coocc_2) <- c("chapterID", "charID_1", "charID_2")
coocc_2 <- merge(merge(coocc_2, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc_2) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph_2 <- graph.data.frame(coocc_2[,-1], directed=FALSE)
graph_2 <- simplify(graph_2, remove.loops=FALSE)
V(graph_2)$label <- V(graph_2)$name
#Book 5
w_4 <- dcast(subset(chaps, bookID == 4)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_4 <- ldply(apply(w_2[,-1], 2, function(col) expand.grid(w_4[!is.na(col),]$characterID, w_4[!is.na(col),]$characterID)), function(x) x)
coocc_4 <- subset(coocc_4, Var1 != Var2)
names(coocc_4) <- c("chapterID", "charID_1", "charID_2")
coocc_4 <- merge(merge(coocc_4, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc_4) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph_4 <- graph.data.frame(coocc_4[,-1], directed=FALSE)
graph_4 <- simplify(graph_4, remove.loops=FALSE)
V(graph_4)$label <- V(graph_0)$name
V(graph_4)$label <- V(graph_4)$name
write.graph(graph_0, "paper/data/got/book_0.gml", format="gml")
write.graph(graph_2, "paper/data/got/book_2.gml", format="gml")
write.graph(graph_4, "paper/data/got/book_4.gml", format="gml")
#Book 3
w_2 <- dcast(subset(chaps, bookID == 2)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_2 <- ldply(apply(w_2[,-1], 2, function(col) expand.grid(w_2[!is.na(col),]$characterID, w_2[!is.na(col),]$characterID)), function(x) x)
coocc_2 <- subset(coocc_2, Var1 != Var2)
names(coocc_2) <- c("chapterID", "charID_1", "charID_2")
coocc_2 <- merge(merge(coocc_2, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc_2) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph_2 <- graph.data.frame(coocc_2[,c("charName_1", "charName_2")], directed=FALSE)
graph_2 <- simplify(graph_2, remove.loops=FALSE)
V(graph_2)$label <- V(graph_2)$name
#Book 5
w_4 <- dcast(subset(chaps, bookID == 4)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc_4 <- ldply(apply(w_2[,-1], 2, function(col) expand.grid(w_4[!is.na(col),]$characterID, w_4[!is.na(col),]$characterID)), function(x) x)
coocc_4 <- subset(coocc_4, Var1 != Var2)
names(coocc_4) <- c("chapterID", "charID_1", "charID_2")
coocc_4 <- merge(merge(coocc_4, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc_4) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph_4 <- graph.data.frame(coocc_4[,c("charName_1", "charName_2")], directed=FALSE)
graph_4 <- simplify(graph_4, remove.loops=FALSE)
V(graph_4)$label <- V(graph_4)$name
write.graph(graph_2, "paper/data/got/book_2.gml", format="gml")
write.graph(graph_4, "paper/data/got/book_4.gml", format="gml")
?sprintf
id <- 0
sprintf("paper/data/got/book_%x.gml", id)
makegraph <- function(id) {
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph_0, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, makegraph)
library(plyr)
chapters <- read.csv("paper/data/got/chapters.csv")
characters <- read.csv("paper/data/got/characters.csv")
events <- read.csv("paper/data/got/events.csv")
teams <- read.csv("paper/data/got/teams.csv")
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, makegraph)
head(chaps)
subset(events, !is.na(withID))
head(subset(events, !is.na(withID)))
chaps_with <- subset(events, !is.na(withID))[, c(1,2,5)]
head(chaps_with)
library(reshape2)
chaps_with.m <- melt(chaps_with, id.var=chapterID)
chaps_with.m <- melt(chaps_with, id.var="chapterID")
head(chaps_with_m)
head(chaps_with.m)
chaps_with.m <- melt(chaps_with, id.var="chapterID")[,"chapterID", "value"]
chaps_with.m <- melt(chaps_with, id.var="chapterID")[,c("chapterID", "value")]
head(chaps_with.m)
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
head(chaps)
chaps_with.m$V1 <- rep(1, nrow(chaps_with.m))
names(chaps_with.m)[2]
names(chaps_with.m)[2] <- "characterID"
chaps_with.m$V1 <- rep(1, nrow(chaps_with.m))
rbind(chaps, chaps_with.m)
chaps <- merge(rbind(chaps, chaps_with.m), chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
makegraph <- function(chaps = chaps, id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, function(x) makegraph(id=x))
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, makegraph)
?dcast
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = "sum")
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, makegraph)
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
#apply to all chapters
sapply(0:4, makegraph)
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
sapply(0:4, makegraph)
sapply(0:4, makegraph)
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col),]$characterID, w[!is.na(col),]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, makegraph)
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
id=0
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
w[1:10,1:10]
#function to create gml files for gravicom
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[!is.na(col) || col > 0,]$characterID, w[!is.na(col) || col > 0,]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
#apply to all chapters
sapply(0:4, makegraph)
library(plyr)
library(reshape2)
chapters <- read.csv("paper/data/got/chapters.csv")
characters <- read.csv("paper/data/got/characters.csv")
events <- read.csv("paper/data/got/events.csv")
teams <- read.csv("paper/data/got/teams.csv")
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps <- merge(chaps, chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
require(reshape2)
require(plyr)
require(igraph)
id = 0
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
w[1:10,1:10]
makegraph <- function(id) {
require(reshape2)
require(plyr)
require(igraph)
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[col > 0,]$characterID, w[col > 0,]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
write.graph(graph, sprintf("paper/data/got/book_%x.gml", id), format="gml")
}
sapply(0:4, makegraph)
chaps_with <- subset(events, !is.na(withID))[, c(1,2,5)]
chaps_with.m <- melt(chaps_with, id.var="chapterID")[,c("chapterID", "value")]
names(chaps_with.m)[2] <- "characterID"
chaps_with.m$V1 <- rep(1, nrow(chaps_with.m))
chaps <- merge(rbind(chaps, chaps_with.m), chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
chaps <- ddply(subset(events, event!="mentioned"), .(chapterID, characterID), nrow)
chaps_with <- subset(events, !is.na(withID))[, c(1,2,5)]
chaps_with.m <- melt(chaps_with, id.var="chapterID")[,c("chapterID", "value")]
names(chaps_with.m)[2] <- "characterID"
chaps_with.m$V1 <- rep(1, nrow(chaps_with.m))
chaps <- merge(rbind(chaps, chaps_with.m), chapters, by.x='chapterID', by.y='ID', all.x=TRUE)
sapply(0:4, makegraph)
id
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
w[1:10,1:10]
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[col > 0,]$characterID, w[col > 0,]$characterID)), function(x) x)
head(coocc)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
str(coocc)
summary(coocc)
levels(coocc$charName_2)
sum(is.na(coocc$charName_2))
sum(is.na(coocc$charName_1))
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
id=1
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
w[1:10,1:10]
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[col > 0,]$characterID, w[col > 0,]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
V(graph)$label <- V(graph)$name
id=2
w <- dcast(subset(chaps, bookID == id)[,c(1,2,3)], characterID ~ chapterID, value.var="V1", fun.aggregate = sum)
coocc <- ldply(apply(w[,-1], 2, function(col) expand.grid(w[col > 0,]$characterID, w[col > 0,]$characterID)), function(x) x)
coocc <- subset(coocc, Var1 != Var2)
names(coocc) <- c("chapterID", "charID_1", "charID_2")
coocc <- merge(merge(coocc, characters, by.x="charID_2", by.y="characterID", all.x=TRUE)[,1:4], characters, by.x="charID_1", by.y="characterID", all.x=TRUE)[,1:5]
names(coocc) <- c("charID_1", "charID_2", "chapterID", "charName_2", "charName_1")
graph <- graph.data.frame(coocc[,c("charName_1", "charName_2")], directed=FALSE)
graph <- simplify(graph, remove.loops=FALSE)
summary(coocc)
coocc[is.na(cooc$charName_2),]
coocc[is.na(coocc$charName_2),]
levels(events$event)
head(events)
pop.nj <- 8.865*10^6
pop.sd <- 833,354
pop.sd <- 833354
rate.nj <- 11.7/100000
rate.sd <- 70.2
rate.sd <- 70.2/100000
rate.sd*pop.sd
rate.nj*pop.nj
rate.sd*pop.sd/.6
rate.nj*pop.nj/.6
(rate.nj*pop.nj/.6)/pop.nj*100000
(rate.sd*pop.sd/.6)/pop.sd*100000
rate.sd
rate.nj
(rate.nj*pop.nj/.6)/pop.nj
(rate.sd*pop.sd/.6)/pop.sd
