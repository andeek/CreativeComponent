{
    "contents" : "GraphMLtoJSON<-function(file){\n  require(XML)\n  require(rjson)\n  require(plyr)\n  \n  graph<-xmlRoot(xmlTreeParse(file))[[\"graph\"]]\n  \n  nodes<-xmlElementsByTagName(graph, \"node\")\n  edges<-xmlElementsByTagName(graph, \"edge\")\n  \n  node_list<-list()\n  for(i in 1:length(nodes)){\n    id<-xmlGetAttr(nodes[[i]], \"id\")\n    data<-xmlElementsByTagName(nodes[[i]], \"data\")\n    data_list<-list()\n    for(j in 1:length(data)) {\n      data_list[[xmlGetAttr(data[[j]],\"key\")]]<-xmlValue(data[[j]])  \n    }\n    node_list[[i]]<-cbind(id, data.frame(data_list))\n  }\n  \n  edge_list <- lapply(1:length(edges),function(i) c(source=xmlGetAttr(edges[[i]],\"source\"), target=xmlGetAttr(edges[[i]],\"target\")))\n\n  temp.n<-ldply(node_list)\n  temp.e<-ldply(edge_list)\n  e.2<-data.frame(source=apply(temp.e, 1, function(x) which(temp.n$id == x[\"source\"])-1),\n                  target=apply(temp.e, 1, function(x) which(temp.n$id == x[\"target\"])-1))\n  \n  edge_list.2<-split(e.2, 1:nrow(e.2))\n  names(edge_list.2)<-NULL\n  \n  merge_lists<-list()\n  merge_lists$nodes<-node_list\n  merge_lists$edges<-edge_list.2\n  return(toJSON(merge_lists))\n}",
    "created" : 1376955686131.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3681521234",
    "id" : "7F692DE2",
    "lastKnownWriteTime" : 1362446070,
    "path" : "~/Documents/Projects/Community-Detection/Prototype D3-Shiny/Network Graph/code/GraphMLtoJSON.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}